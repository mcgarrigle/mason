#!/usr/bin/env ruby

require 'json'
require 'pp'

def flatten(hash)
  node = {}
  hash.each do |k,v|
    if v.is_a?(Hash) 
      v.each do |j,v|
        node["#{k}.#{j}"] = v
      end
    else
      node[k] = v
    end
  end
  return node
end

def template(text, args)
  text.gsub(/{{.*?}}/) {|v| v.gsub!(/[{}]/,""); args[v] }
end

def mac_address(mac)
  mac.scan(/../).join(":")
end

def mac_boot(mac)
  mac = "01" + mac
  mac.scan(/../).join("-")
end

def bootfile(node)
  node = node.dup
  fqdn = node["fqdn"]
  text = File.read("/var/lib/tftpboot/pxelinux/pxelinux.cfg/template")
  text = template(text, node)
pp text
  #File.write("/var/www/html/ks/#{fqdn}.ks", template(text, node))
end

def kickstart(node)
  node = node.dup
  fqdn = node["fqdn"]
  macs = node.select {|k| k.match /eth\d+\.mac/ }
  macs.each do |k,v|
    node[k] = mac_address(v)
  end
  text = File.read("/var/www/html/ks/template.ks")
  File.write("/var/www/html/ks/#{fqdn}.ks", template(text, node))
end

text = File.read(ARGV[0])
json = JSON.parse(text)
node = flatten(json)

pp node

bootfile(node)
kickstart(node)

pp node
# "/var/lib/tftpboot/pxelinux/pxelinux.cfg/01-08-00-27-d5-5c-ec"
#
